#!/bin/bash
#Please note that for the correct operation you
#will need the utilities found here
#
#Individual variables
IP= #Mikrotik IP
LGIN= #Mikrotik login (user)
PASS= #Password (SSH)
NAME= #Name router (example "LasVegasRouter")
PRT= #Port (can 1 for all)
#
#Verification. I do not recommend ICMP,
#but you can comment on the unnecessary, use #
#status=$(ping -c 1 $IP &> /dev/null && echo success || echo fail)
status=$(netcat -w3 -z $IP $PRT && echo success || echo fail)
#
#Static Variables
SHELF= #Shelf life, needed to remove old backups (in days)
gg=success #Variable to check (netcat or ICMP check)
DIR= #Directory for backups, for example /home/user/backups/
     #Do not use system directories, create a new!
DATE=$(echo `date +%Y.%m.%d`) #Date
#
#Echo is necessary for visualization and logging.
#If the check is passed, the backup will be created on the router,
#then saved locally,
#after which the backup will be deleted from the router.
#If not, an error will be displayed.
function backuper {
echo "
  Start $IP ($NAME)...
  "
if [ $status = $gg ]
then
  echo "_______________________________
  Status $IP - OK, create backup:"
  sshpass -p $PASS ssh -T -p $PRT $LGIN@$IP << EOF
export file=$IP$NAME
system backup save name=$IP$NAME
quit
EOF
echo "
  Lockal save backup's...
  "
sshpass -p $PASS scp -P $PRT $LGIN@$IP":/$IP$NAME.rsc" $DIR
sshpass -p $PASS scp -P $PRT $LGIN@$IP":/$IP$NAME.backup" $DIR
echo "
  Cleaning router directory...
  "
sshpass -p $PASS ssh -T -p $PRT $LGIN@$IP << EOF
file remove "$IP$NAME.rsc"
file remove "$IP$NAME.backup"
quit
EOF
echo "
$IP END
  _______________________________
"
else
  echo "  ...............................
  ERROR $IP,
  backup can't create and save.
  Check the specified port and ip
  ...............................
  _______________________________
  "
fi
}
#
function archandel {
  zip -9 $DIR$DATE.zip *.backup *.rsc     #archiving
  rm $DIR*.backup $DIR*.rsc               #cleaning the local folder
  find "$DIR"2* -mtime +$SHELF -delete    #deleting old versions
}
#
#start function's
backuper
archandel
#Logging will be added soon, sorry
